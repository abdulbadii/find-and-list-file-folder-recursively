fd(){
(($1))&&{
	f=`file $3`
	e=`echo $f|sed -E 's/[^:]+:\s+\S+\s+(\S+(\s+\S+){2}).+/\1/;s/Intel$/32bit/'`
	if [[ $e =~ ^execu ]];then echo $e
	else echo $f|sed -E 's/[^:]+: *(.+)/\1/';fi
}
(($2))&&ldd $3 2>/dev/nul |sed -Ee 's/[^>]+>(.+)\s+\(0.+/\1/ ;1s/.*/DEP:&/ ;1! s/.*/    &/'
}

l(){
unset a op o E y O N n p P u w;r=%p;f=0;d=0
[[ ${@:1} =~ ^\.$ ]] &&{ find ~+ -type f; return; }
[[ ${@:1} =~ ^/$ ]] &&{ find ~+ \! -ipath ~+ -type d -printf $r/\\n ; return; }
for e
{
case ${e:0:3} in
-f) f=1;;
-d) d=1;;
-[0-9]*) y=-maxdepth\ ${e:1};;
-E) E=1;;
-s) r=%s\ $r;;
-t) r="$r %Tr %Tx";;
-st) r='%s %p %Tr %Tx';;
-[HDLPO]|-[ac-il-y]?) op=$op${e/=/ }\ ;;
-|--) a=$a$e\ ;break;;
-*) echo if \'$e\' is meant as filename, the last options must end with - or --;;
*)	break;;
esac
op=$op\ $e
}
D="-type d -printf \"$r/\n\""
F="-type f -printf \"$r\n\""
set -f
A=`history 1`
A=${A# *[0-9]*  }' '
A=${A%%[&|>]*}
a=${A#*$op* }
[ $a ] || { eval "find ~+ \! -ipath ~+ $D -o $F"; return; }
eval set -- "${a//\\/\\\\}$n"
IFS=$'\n'

for a
{
[[ ${a} =~ [*?] ]];w=$?
z=${a: -1}
a=${a%[/.]}
if [ ${a:0:1} = / ];then
	P=$a
	if((w));then
		s=$a;
	else
		p=${a%%[*?]*}
		s=${p%/*}
	fi
else
	s=~+
	if [ ${a:0:3} = ../ ] ;then
		s=${s%/*}
		P=$s/*${a#../}
	else
		P=$s/*${a#./}
	fi
fi
((w)) && D="$D -exec find {} \; "

if [ $z = . ] ;then	D=
elif [ $z = / ] ;then	F=
else	O=-o
fi
if [ $E ] ;then
	A="find $s $y -regextype posix-extended -iregex */$a $op \( $D $O $F"
else	A="find $s $y -ipath $P $op \( $D $O $F"
fi
if((f+d));then
	export -f fd;eval $A -exec bash -c \'fd $f $d \$0\' {} '\; \)'
else
	eval "$A \)"
fi
}
set +f
}
