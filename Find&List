fd(){
(($1))&&{
	f=`file $3`
	e=`echo $f|sed -E 's/[^:]+:\s+\S+\s+(\S+(\s+\S+){2}).+/\1/'`
	if [[ $e =~ ^execu ]];then echo $e;else echo $f|sed -E 's/[^:]+: *(.+)/\1/';fi
}
(($2))&&ldd $3 2>/dev/nul |sed -Ee 's/[^>]+>(.+)\s+\(0.+/\1/ ;1s/.*/DEP:&/ ;1! s/.*/    &/'
}
l(){
unset i o E c y O N n P;r=%p;f=0;d=0
for a
{
case ${a:0:3} in
-f) f=1;;
-d) d=1;;
-[0-9]) y=-maxdepth\ ${a:1};;
-E) E=1;;
-s) r=%s\ $r;;
-t) r="$r %Tr %Tx";;
-st) r='%s %p %Tr %Tx';;
-[HDlPOa-z]?) o="$o $a";;
-?*) if [ -e $a ];then	n=$n\ $a
	else	echo "ignoring unrecognized option \'$a\'"
	fi;;
*)
a=${@:1:i}
A=`history 1`	;A=${A%%|*}
a=${A#*"${FUNCNAME[0]}"*$a*[! ]}
a="${A: -((1+${#a}))}"
a=${a//\\/\\\\};IFS=$'\n'
set -f;eval set -- "$a" "$n"
for a
{
z=${a: -1}
a=${a%[/.]}
if [[ ${a: -1} = [*?] ]];then
	N=-iname\ $a
fi
if [ ${a:0:1} = / ];then
	p=${a%%[*?]*}
	s=${p%/*}
	P=-ipath *${a#$s}
else	s=~+
	if [ ${a:0:2} = ./ ] ;then
		a=${a#./}
		N=-iname\ $a
		P=-ipath $s/$a
		n=${a//[!\/]}
		y=-maxdepth\ $((${#n}+1))
	else
		N=-iname\ $a
	fi
fi
D="-type d $o -printf \"$r/\n\""
F="-type f $o -printf \"$r\n\""
H="-type d -printf \"$r/\n\""
I="-type f -printf \"$r\n\""
if [ $z = . ] ;then	D=;H=
elif [ $z = / ] ;then	F=;I=
else	O=-o
fi
if [ $E ] ;then	A="find $s $y -regextype posix-extended -iregex */$a $o \( $H $O $I"
else	A="find $s $y $P $N \( $D $O $F"
fi
if((f+d));then
	export -f fd;eval $A -exec bash -c \'fd $f $d \$0\' {} '\; \)'
else	eval "$A \)"
fi
}
return;;esac
let i++
}
((i))||find ~+ -type d -printf '%p/\n' -o -type f -printf '%p\n'
set +f
}
