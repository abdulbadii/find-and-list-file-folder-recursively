l(){
i=;o=;d=;E=;r=%p;t=;d=;c=;y=
for a
{
case ${a:0:3} in
-f) t=1;;
-d) d=1;;
-[0-9]) y=-maxdepth\ ${a:1};;
-E) E=1;;
-s) r=%s\ $r;;
-t) r="$r %Tr %Tx";;
-st) r='%s %p %Tr %Tx';;
-[HDlPOa-z]?) o="$o $a";;
-?*) [ -e $a ] ||echo "ignoring unrecognized option \'$a\'";;
*)
a=${@:1:i}
A=`history 1`	;A=${A%%|*}
a=${A#*"${FUNCNAME[0]}"*$a*[! ]}
a="${A: -((1+${#a}))}"
a=${a//\\/\\\\};IFS=$'\n'
set -f;eval set -- "$a"
for a
{
f=${a: -1};a=${a%[/.]}
O=;F="-ipath $p$c$a -iname $a -type f $o -printf \"$r\n\""
D="-ipath $p$c$a -iname $a -type d $o -printf \"$r/\n\""
H="-regextype posix-extended -iregex $p/$a $o -type d -printf \"$r/\n\""
I="-regextype posix-extended -iregex $p/$a $o -type f -printf \"$r\n\""
if [ $f = . ] ;then	D=;H=
elif [ $f = / ] ;then	F=;I=
else	O=-o
fi
if [ ${a:0:1} = / ];then
	p="${a%%[*?]*}"
	if [ -d $p -a $p = "$a" ];then a=*
	else p=${p%/*};a=${a#$p/};fi
else	p=~+
	if [ ${a:0:2} = ./ ] ;then
		y=-maxdepth\ 1;a=${a#./}
	else	c=*	;fi
fi
P="find $p $y"
if [ $E ] ;then	P="$P $H $O $I"
else	P="$P $F $O $D"
fi
if [ "$t$d" ];then dft
else	eval "$P"
fi
}
return;;esac
let i++
}
((i))||find ~+ -type d -printf '%p/\n' -o -type f -printf '%p\n'
set +f
}

dft(){
for l in `eval $P|head -n499`
	{	find $p -ipath "$l" -printf "$r\n"
		[ -f $l ]&&{
		[ "$t" ]&&{
			f=`file $l`
			e=`echo $f|sed -E 's/[^:]+:\s+\S+\s+(\S+(\s+\S+){2}).+/\1/'`
			if [[ $e =~ ^execu ]];then echo $e;else echo $f|sed -E 's/[^:]+: *(.+)/\1/';fi
		}
		[ "$d" ]&&ldd $l 2>/dev/nul |sed -Ee 's/[^>]+>(.+)\s+\(0.+/\1/ ;1s/.*/DEP:&/ ;1! s/.*/    &/'
	};}
}
