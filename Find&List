l(){
unset a o E y O N n P u;r=%p;f=0;d=0
(($#)) || { find ~+ -iname '*'; return; }
for e
{
case ${e:0:3} in
-f) f=1;;
-d) d=1;;
-[0-9]*) y=-maxdepth\ ${e:1};;
-E) E=1;;
-s) r=%s\ $r;;
-t) r="$r %Tr %Tx";;
-st) r='%s %p %Tr %Tx';;
-[HDLPO]|-[ac-il-y]?) o=$o${e/=/ }\ ;;
-|--) a=$a$e\ ;break;;
-*) echo if \'$e\' is meant as filename, the last options must be followed by - or --. So it\'ll be ignored;;
*)	break;;
esac
a=$a\ $e
}

D="-type d -printf \"$r/\n\""
F="-type f -printf \"$r\n\""
H="-type d -printf \"$r/\n\""
I="-type f -printf \"$r\n\""
set -f
A=`history 1`
A=${A# *[0-9]* }
A=${A%%[&|>]*};A=${A//  / }
a=${A#*"${FUNCNAME[0]}"*$a}
a=${a:-*}
[[ $a =~ \ */\ *$ ]] &&{ find ~+ -type d -iname '*'; return; }
eval set -- "${a//\\/\\\\}$n"
IFS=$'\n'
for a
{
if [ $a = . ] ;then	a=*.
elif [ $a = / ];then
	
	a=/*
fi
z=${a: -1}
a=${a%[/.]}
if [ ${a:0:1} = / ];then
	p=${a%%[*?]*};s=${p%/*}/
	P=-ipath\ ${a%/*}/*
	n=${a##*/};N=-iname\ ${n:-*}
else	s=~+
	if [ ${a:0:2} = ./ ] ;then
		a=${a#./}
		P=-ipath\ $s/$a
		n=${a//[!\/]};y=-maxdepth\ $((${#n}+1))
	else
		N=-iname\ ${a##*/}
		[[ $a =~ / ]] &&P=-ipath\ *$a
	fi
fi
if [ $z = . ] ;then	D=;H=
elif [ $z = / ] ;then	F=;I=
else	O=-o
fi
if [ $E ] ;then	A="find $s $y -regextype posix-extended -iregex */$a $o \( $H $O $I"
else	A="find $s $y $P $N $o \( $D $O $F"
fi
if((f+d));then
	export -f fd;eval $A -exec bash -c \'fd $f $d \$0\' {} '\; \)'
else	eval "$A \)"
fi
}
set +f
}
