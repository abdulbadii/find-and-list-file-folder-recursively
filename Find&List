#! /usr/bin/bash
l(){
i=;o=;d=;E=;r=%p;
for a
{
case ${a:0:3} in
	-s) r=%s\ $r;;
	-t) r="$r %Tr %Tx";;
	-st) r='%s %p %Tr %Tx';;
	-d[0-9]) d=-maxdepth\ ${a:2};;
	-E) E=1;;
	-[A-Za-z]*|[0-9]*) o="$o $a";;
	*)
	a=${@:1:i}
	A=`history 1`;
	a=${A#*"${FUNCNAME[0]}"*$a*[! ]}
	a="${A: -((1+${#a}))}"
	a=${a//\\/\\\\}
	set -f;eval set -- "$a"
	set +f
	for a
	{
 	if [ "${a:0:1}" = / ];then
		p=${a%%[*?]*};	p=${p%/*}/
		a=${a#$p}
		if [ $E ];then
			eval "find $p $d -regextype posix-extended -iregex \"$p$a\" $o -printf \"$r\n\""
		else
			a=${a//./\\\\.}
			if [[ $a =~ \*\* ]] ;then
				a=${a//\*\*/|/};a=${a//\*/[^\/]*};a=${a//|\//.*}
			else	a=${a//\*/[^\/]*} ;d=-maxdepth\ 1
			fi
			eval "find $p $d -regextype posix-extended -iregex \"$p${a//\?/.}\" $o -printf \"$r\n\""
		fi
	elif [ $E ];then	eval "find ~+ $d -regextype posix-extended -iregex \".*$a\" $o -printf \"$r\n\""
	else
		a=${a//./\\\\.}
		if [[ $a =~ \*\* ]] ;then
			a=${a//\*\*/|/};	a=${a//\*/[^\/]*};	a=${a//|\//.*};
		else	a=${a//\*/[^\/]*}
		fi
		eval "find ~+ $d -regextype posix-extended -iregex \".*/${a//\?/.}\" $o -printf \"$r\n\""
	fi
	}
	return;;
esac
let i++
}
find ~+ -name '*' -printf "%p \n"
}
